name: CIA Walsh
#Warning the definition of mm=M/P(-1) so the real money balance is m = mm/(1+PI)

declarations:

    states: [k, mm, z, u]

    controls: [n, lamb, PI, R, I]

    auxiliary:  [y, theta, m, uc, un, c]

    shocks: [e_z,e_u]

    parameters: [eta, Psi, Phi, beta, alpha, delta, theta_ss, gamma, varphi, rho, sigma_z, sigma_u]

equations:

    transition: 
        - k = (1-delta)*k(-1)+y(-1)-c(-1) 
        - mm = (1+theta_ss+gamma*u(-1)+varphi*z(-1)+e_u)/(1+PI(-1))*mm(-1)
        - z = rho*z(-1)+e_z
        - u = gamma*u(-1)+varphi*z(-1)+e_u


    auxiliary:
        - y = exp(z)*k^alpha*n^(1-alpha)
        - theta = u+theta_ss
        - m = mm/(1+PI)
        - uc= (1/m)^(Phi)
        - un= Psi*(1-n)^(-eta)
        - c= m


    arbitrage:
        - un= (1-alpha)*y/n*lamb                                  | -inf <= n <= inf
        - lamb= beta*R*lamb(1)                               | -inf <= lamb <= inf
        - lamb= beta*uc(1)/(1+PI(1))                         | -inf <= PI <= inf
        - R=alpha*y(1)/k(1)+1-delta                              | -inf <= R <= inf
        - I=R*(1+PI(1))                                          | -inf <= I <= inf
#        - lamb=beta*(I)/(1+PI(1))*lamb(1)                    | -inf <= I <= inf


        

calibration:

    parameters:
        eta: 1
        Phi: 2
        beta: 0.989
        alpha: 0.36
        delta: 0.019
        theta_ss: 0.0125
        gamma: 0.5
        varphi: 0
        rho: 0.95
        sigma_z: 0.007
        sigma_u: 0.0089
#        Psi: 1.34
        Psi: ((1-alpha)/((1-n)^(-eta)*(n)^Phi))*(beta/(1+theta))*(1/alpha*(R-1+delta))^((Phi-alpha)/(1-alpha))*(1/alpha*(R-1+delta)-delta)^(-Phi)

    steady_state:
        n: .31
        R: 1/beta
        k: n*(1/alpha*(R-1+delta))^(1/(alpha-1))
        y: k*1/alpha*(R-1+delta)
        c: y-delta*k
        PI: theta
        mm: c*(1+PI)
        z: 0
        u: 0 +varphi*z
        theta: theta_ss
        m: mm/(1+PI)
        uc: c^(-Phi)
        un: Psi*(1-n)^(-eta)
        I: R*(1+PI)
        lamb: beta*uc/(1+PI)

    covariances: |
        [[ sigma_z**2, 0],
         [0, sigma_u**2]],
        
        
