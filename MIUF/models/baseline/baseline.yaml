name: MIUF Walsh
#Warning the definition of mm=M/P(-1) so the real money balance is m = mm/(1+PI)

declarations:

    states: [k, mm, z, u]

    controls: [n, c, R, PI,I]    

    auxiliary:  [y, theta, X, m, uc, um, un]

    shocks: [e_z,e_u]

    parameters: [eta, Psi, Phi, a, b, beta, alpha, delta, theta_ss, gamma, varphi, rho, sigma_z, sigma_u, H]

equations:

    transition: 
        - k = (1-delta)*k(-1)+y(-1)-c(-1) 
        - mm = (1+theta_ss+gamma*u(-1)+varphi*z(-1)+e_u)/(1+PI(-1))*mm(-1)
        - z = rho*z(-1)+e_z
        - u = gamma*u(-1)+varphi*z(-1)+e_u


    auxiliary:
        - y = exp(z)*k^alpha*n^(1-alpha)
        - theta = u+theta_ss             
        - X = a*c^(1-b)+(1-a)*(mm/(1+PI))^(1-b)
        - m = mm/(1+PI)
#       - uc= a*X^((b-Phi)/(1-b))*c^(-b)
#       - um= (1-a)*X^((b-Phi)/(1-b))*(m)^(-b)
        - uc= a*(a*c^(1-b)+(1-a)*(mm/(1+PI))^(1-b))^((b-Phi)/(1-b))*c^(-b)
        - um= (1-a)*(a*c^(1-b)+(1-a)*(mm/(1+PI))^(1-b))^((b-Phi)/(1-b))*(mm/(1+PI))^(-b)
        - un= Psi*(1-n)^(-eta)


    arbitrage:
        - un/uc = (1-alpha)*y/n         | -inf <= n <= inf
        - uc= beta*R*uc(1)                                                      | -inf <= c <= inf
        - R=alpha*y(1)/k(1)+1-delta                                             | -inf <= R <= inf
#       - um/uc = (R*(1+PI(1))-1)/(R*(1+PI(1)))            | -inf <= PI <= inf
        - um/uc = 1-beta*uc(1)/uc*(1/(1+PI(1)))            | -inf <= PI <= inf
        - I=R*(1+PI(1))


        

calibration:

    parameters:
        eta: 1
        Phi: 2
        a: 0.95
        b: 2.56
        beta: 0.989
        alpha: 0.36
        delta: 0.019
        theta_ss: 0.0125
        gamma: 0.5
        varphi: 0
        rho: 0.95
        sigma_z: 0.007
        sigma_u: 0.0089
        H: (((1+(a/(1-a))^(-1/b)*((1+theta_ss-beta)/(1+theta_ss))^((b-1)/b))^((b-Phi)/(1-b)))/(n^Phi/(1-n)^(eta)))^(-1)
        Psi: ((1-alpha)/H)*(y/k)^(-alpha/(1-alpha))*a^((1-Phi)/(1-b))*(c/k)^(-Phi)*(n/k)^(Phi)

    steady_state:
        n: .33
        R: 1/beta
        k: n*(1/alpha*(R-1+delta))^(1/(alpha-1))
        y: k*1/alpha*(R-1+delta)
        c: y-delta*k
        PI: theta
        mm: (a/(1-a))^(-1/b)*((1+theta_ss-beta)/(1+theta_ss))^(-1/b)*c*(1+PI)
        z: 0
        u: 0 +varphi*z
        theta: theta_ss
        X: a*c^(1-b)+(1-a)*(mm/(1+PI))^(1-b)
        m: mm/(1+PI)
        uc: X^((b-Phi)/(1-b))*a*c^(-b)
        um: (1-a)*X^((b-Phi)/(1-b))*(mm/(1+PI))^(-b)
        un: Psi*(1-n)^(-eta)
        I: R

    covariances: |
        [[ sigma_z**2, 0],
         [0, sigma_u**2]],
        
        
